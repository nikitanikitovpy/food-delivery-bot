import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
bot = Bot(token=os.getenv("BOT_TOKEN"))
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start(message: types.Message):
    # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="üçî –ú–µ–Ω—é")],
            [types.KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞")],
            [types.KeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—åasd")],
        ],
        resize_keyboard=True
    )
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **Wilco Food**! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é"
@dp.message(lambda msg: msg.text == "üçî –ú–µ–Ω—é")
async def show_menu(message: types.Message):
    # –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    menu_keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="–ó–∞–≤—Ç—Ä–∞–∫–∏", callback_data="breakfast")],
            [types.InlineKeyboardButton(text="–ù–∞–ø–∏—Ç–∫–∏", callback_data="drinks")],
        ]
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=menu_keyboard)

@dp.callback_query(lambda cb: cb.data == "breakfast")
async def show_breakfast(callback: types.CallbackQuery):
    items_keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="–û–º–ª–µ—Ç —Å –±–µ–∫–æ–Ω–æ–º (350 —Ä—É–±.)", callback_data="item_1")],
            [types.InlineKeyboardButton(text="–ü–∞–Ω–∫–µ–π–∫–∏ (290 —Ä—É–±.)", callback_data="item_2")],
        ]
    )
    await callback.message.edit_text("–ó–∞–≤—Ç—Ä–∞–∫–∏:", reply_markup=items_keyboard)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())